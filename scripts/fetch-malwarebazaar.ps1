param(
  [int]$Count = 100,
  [string]$OutDir = "..\\samples\\threats\\real"
)
$ErrorActionPreference = 'Stop'
$repoRoot = Split-Path -Parent $PSScriptRoot
$outPath = Join-Path $repoRoot $OutDir
if (-not (Test-Path $outPath)) { New-Item -ItemType Directory -Path $outPath | Out-Null }

Write-Host "Fetching $Count recent samples from MalwareBazaar â€¦"
$body = @{ query = 'get_recent'; selector = 'time'; limit = $Count } | ConvertTo-Json -Depth 3
$resp = Invoke-WebRequest -Uri 'https://mb-api.abuse.ch/api/v1/' -Method POST -ContentType 'application/json' -Body $body -UseBasicParsing -TimeoutSec 60
$json = $resp.Content | ConvertFrom-Json
if (-not $json -or -not $json.data) { throw "MalwareBazaar returned no data" }

$i = 0
foreach ($d in $json.data) {
  if ($i -ge $Count) { break }
  $sha256 = [string]$d.sha256_hash
  if ([string]::IsNullOrWhiteSpace($sha256)) { continue }
  $family = if ($d.file_type_mime) { [string]$d.file_type_mime } else { 'Malware' }
  $name = if ($d.signature) { [string]$d.signature } else { "MalwareBazaar Sample" }
  $tags = @()
  if ($d.tags) { $tags = @($d.tags | ForEach-Object { [string]$_ }) }
  $model = [ordered]@{
    name = "$name [$($sha256.Substring(0,12))]"
    family = $family
    confidence = 0.7
    sources = @('abuse.ch:MalwareBazaar')
    file = [ordered]@{ hashes = @("sha256:$sha256"); strings = @(); hex_patterns = @(); pe_features = @() }
    network = [ordered]@{ domains = @(); uris = @(); ports = @() }
    log = [ordered]@{ windows = [ordered]@{ event_id = @(); cmdline_contains = @() } }
  }
  if ($tags.Count -gt 0) { $model.tags = $tags }
  $fileName = ("malwarebazaar_${i+1:000}.json")
  $outFile = Join-Path $outPath $fileName
  $model | ConvertTo-Json -Depth 8 | Out-File -FilePath $outFile -Encoding UTF8 -NoNewline
  $i++
}
Write-Host "Saved $i files to $outPath"
